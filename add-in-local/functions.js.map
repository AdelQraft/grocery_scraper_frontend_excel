{"version":3,"file":"functions.js","mappings":";;;;;;;;;;;;;;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAC7BC,GAAW,EACXC,WAAmB,EACnBC,eAAuB,EACvBC,gBAAwB,EACxBC,iBAAyB,EACzBC,cAAsB,EACtBC,iBAA0B,EAC1BC,UAA2D,EACpD;EACPT,iDAAS,CAACU,QAAQ,CAACT,cAAc,CAChCC,GAAG,EACHC,WAAW,EACXC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,cAAc,EACdC,iBAAiB,EACjBC,UACD,CAAC;AACF;AAEAE,eAAe,CAACC,SAAS,CAAC,gBAAgB,EAAEX,cAAc,CAAC","sources":["webpack://grocery_scraper_frontend_excel/./src/function/function.ts"],"sourcesContent":["import {Functions} from \"./functions\";\n\n// noinspection JSUnusedGlobalSymbols\n/**\n * Retrieve the price for the first item matching a search query given a store name\n * @customfunction\n * @param url The URL of the product, from a known supermarket.\n * @param refQuantity The (reference) quantity of the product, possibly with its units. Standard units apply. standard multipliers are denoted by square brackets.\n * @param refQuantityKind The kind of the (reference) quantity. Valid values are: price-in-local-currency, count, mass, volume, protein-mass, energy.\n * @param [infoToRetrieve] The information to retrieve, comma-separated, in order. Valid values are: price-in-local-currency-slc, count-id, mass-g, volume-L, protein-mass-g, energy-Cal.\n * @param [massToVolumeRatio] The ratio of mass to volume with its units. Standard units apply. standard multipliers are denoted by square brackets.\n * @param [massToCountRatio] The ratio of mass to count with its units. Standard units apply. standard multipliers are denoted by square brackets.\n * @param [makePriceNegative] Make the price negative.\n * @param invocation The custom function handler.\n * @returns Information about the product in the specified information order.\n */\nexport function getInfoFromUrl(\n\turl: string,\n\trefQuantity: string,\n\trefQuantityKind: string,\n\tmassToCountRatio: string,\n\tmassToVolumeRatio: string,\n\tinfoToRetrieve: string,\n\tmakePriceNegative: boolean,\n\tinvocation: CustomFunctions.StreamingInvocation<number[][]>\n): void {\n\tFunctions.instance.getInfoFromUrl(\n\t\turl,\n\t\trefQuantity,\n\t\trefQuantityKind,\n\t\tmassToCountRatio,\n\t\tmassToVolumeRatio,\n\t\tinfoToRetrieve,\n\t\tmakePriceNegative,\n\t\tinvocation\n\t)\n}\n\nCustomFunctions.associate(\"GETINFOFROMURL\", getInfoFromUrl);"],"names":["Functions","getInfoFromUrl","url","refQuantity","refQuantityKind","massToCountRatio","massToVolumeRatio","infoToRetrieve","makePriceNegative","invocation","instance","CustomFunctions","associate"],"sourceRoot":""}